function [Dim, Wout,Vout]=VanCycleSub(d,e)
%% This function compute  the subespace spanned by the monodromy action of the fibration  of F=y^e+x^d

%% Output:
%% Dim: is the number of diferent eigenvalues, remark that the rank of Wout is equal to the expected subspace if Dim=N
%% Wout(:,:,j): is the  subspace generated by the vanisihg cycle v_j
%% Vout: In the column j there are the vanishing cycle in the space generated by v_j.

%% Computing the intersection matrix.
if e==2 
%%%%% Intersection matrix M2
    N=(d-1);
    i1=[-1 1];
    Im=zeros(N);
    for k=1:N-1
        Im(k,k+1)=-i1(mod(k,2)+1);
        Im(k+1,k)=i1(mod(k,2)+1);
    end
%%%%%
elseif e==3
%%%%% Intersection matrix M3
    N=2*(d-1);
    i1=[1 1 0 1];
    j1=[-1 1 1 -1];
    k1=[0 -1 0 0];
    Im=zeros(N);
    for k=1:N-1
        Im(k,k+1)=-i1(mod(k,4)+1);
        Im(k+1,k)=i1(mod(k,4)+1);
    end
    for k=1:N-2
        Im(k,k+2)=-j1(mod(k,4)+1);
        Im(k+2,k)=j1(mod(k,4)+1);
    end
    for k=1:N-3
        Im(k,k+3)=-k1(mod(k,4)+1);
        Im(k+3,k)=k1(mod(k,4)+1);
    end
%%%%%
elseif e==4
%%%%% Intersection matrix M4
    N=3*(d-1);
    i1=[0 1 -1];
    j1=[0 0 0 -1 0 1];  
    k1=[-1 1 1 1 -1 -1];
    l1=[0 -1 0 0 0 1];
    Im=zeros(N);
    for k=1:N-1
        Im(k,k+1)=-i1(mod(k,3)+1);
        Im(k+1,k)=i1(mod(k,3)+1);
    end
    for k=1:N-2
        Im(k,k+2)=-j1(mod(k,6)+1);
        Im(k+2,k)=j1(mod(k,6)+1);
    end
    for k=1:N-3
        Im(k,k+3)=-k1(mod(k,6)+1);
        Im(k+3,k)=k1(mod(k,6)+1);
    end
    for k=1:N-4
        Im(k,k+4)=-l1(mod(k,6)+1);
        Im(k+4,k)=l1(mod(k,6)+1);
    end
%%%%%%%%%%%%%
else
    fprintf('There is no this intersection matrix yet. \n');    
    N=0;
    Im=0;
end
%% We add the identity matrix in order to define the Monodromy
Im=eye(N)-Im;    

%% Computing the Krylov space dimension
[U Diag]=eig(Im);
Diag=unique(round(diag(Diag),10));  %%%% Different eigenvalues of the Intersection matrix
Dim=length(Diag);

if Dim == N
   W=round(inv(U),10);  %% U*W(:,k)=v_k, the cannonical vector.
   Wout=zeros(N);
   for k=1:N
      %% Look for the eigen vector in the representation of v_k, with coefficients equal to 0:	
      [Ind]=find(W(:,k)==0); 

      %% Choose the eigen-vectors which generate the image of v_k 	
      Ur=U; Ur(:,Ind)=zeros(N, length(Ind)); 

      %% Compute the subspace spanned by the columns of Vr, in the cannonical basis: 
      Wr=(Ur*W); 
     % Wr=transpose(Wr);   %% For visualization: The columns of Wr the subspace generated by e_k
      Wout(1:size(Wr,1), 1:size(Wr,2),k)=Wr; %% Any matrix Wout(:,:,k) is the subspace generated by e_k.
       
      %% Look for the vanishing cyles in the image:
      Ind1=find(round(sum(abs(Wr)),5)==1);   %%% Find the elements which has only a vanishing cycle in the represetation
      [Uc,Jnd1]=find(round(Wr(:,Ind1),5)==1);  %%% Find the correspond row to the vanishing cycle in the representation
      Vout(1:size(Uc,1),k)=sort(Uc);
   end 
else
   Wout=zeros(N);
   for k=1:N   
      Wout(:,:,k)=zeros(N);
   end
      Vout=0;
end
end
